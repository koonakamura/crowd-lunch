# Trigger CI after base branch change
name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install backend dependencies
      working-directory: ./api
      run: |
        pip install poetry
        poetry install
    
    - name: Install frontend dependencies
      working-directory: ./web
      run: npm install
    
    - name: Run backend tests
      working-directory: ./api
      env:
        TESTING: "true"
      run: poetry run pytest tests/
    
    - name: Run load testing with performance gate
      working-directory: ./api
      env:
        TESTING: "true"
      run: |
        # Start the FastAPI server in background
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        SERVER_PID=$!
        
        # Wait for server to start
        sleep 5
        
        # Create reports directory
        mkdir -p reports
        
        # Run Locust load test with performance gate (p95 < 200ms)
        poetry run locust -f scripts/locust_load_test.py --host=http://localhost:8000 \
          -u 20 -r 20 -t 60s --headless --html=reports/load_test_report.html \
          --csv=reports/load_test_stats
        
        # Check p95 response time from CSV stats
        P95_TIME=$(tail -n 1 reports/load_test_stats_stats.csv | cut -d',' -f10)
        echo "P95 response time: ${P95_TIME}ms"
        
        # Kill the server
        kill $SERVER_PID
        
        # Fail if p95 > 200ms (convert to integer for comparison)
        if (( $(echo "$P95_TIME > 200" | bc -l) )); then
          echo "❌ PERFORMANCE GATE FAILED: P95 response time ${P95_TIME}ms exceeds 200ms threshold"
          exit 1
        else
          echo "✅ PERFORMANCE GATE PASSED: P95 response time ${P95_TIME}ms is under 200ms threshold"
        fi
    
    - name: Upload load test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: load-test-reports
        path: api/reports/
    
    - name: Run frontend linting
      working-directory: ./web
      run: npm run lint
    
    - name: Build frontend
      working-directory: ./web
      env:
        VITE_API_BASE_URL: https://crowd-lunch.fly.dev
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install frontend dependencies
      working-directory: ./web
      run: npm install
    
    - name: Build frontend
      working-directory: ./web
      env:
        VITE_API_BASE_URL: https://crowd-lunch.fly.dev
      run: npm run build
    
    - name: Verify Netlify secrets
      run: |
        if [ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" ]; then
          echo "ERROR: NETLIFY_AUTH_TOKEN secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.NETLIFY_SITE_ID }}" ]; then
          echo "ERROR: NETLIFY_SITE_ID secret is not set"
          exit 1
        fi
        echo "Netlify secrets are configured"
    
    - name: Deploy Frontend to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './web/dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - Build ${{ github.run_number }}"
        enable-pull-request-comment: false
        enable-commit-comment: false
        overwrites-pull-request-comment: false
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      continue-on-error: false
